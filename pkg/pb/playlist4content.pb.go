// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.0
// source: playlist4content.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri        *string         `protobuf:"bytes,1,opt,name=uri" json:"uri,omitempty"`
	Attributes *ItemAttributes `protobuf:"bytes,2,opt,name=attributes" json:"attributes,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playlist4content_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_playlist4content_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_playlist4content_proto_rawDescGZIP(), []int{0}
}

func (x *Item) GetUri() string {
	if x != nil && x.Uri != nil {
		return *x.Uri
	}
	return ""
}

func (x *Item) GetAttributes() *ItemAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type ListItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos       *int32  `protobuf:"varint,1,opt,name=pos" json:"pos,omitempty"`
	Truncated *bool   `protobuf:"varint,2,opt,name=truncated" json:"truncated,omitempty"`
	Items     []*Item `protobuf:"bytes,3,rep,name=items" json:"items,omitempty"`
}

func (x *ListItems) Reset() {
	*x = ListItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playlist4content_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListItems) ProtoMessage() {}

func (x *ListItems) ProtoReflect() protoreflect.Message {
	mi := &file_playlist4content_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListItems.ProtoReflect.Descriptor instead.
func (*ListItems) Descriptor() ([]byte, []int) {
	return file_playlist4content_proto_rawDescGZIP(), []int{1}
}

func (x *ListItems) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *ListItems) GetTruncated() bool {
	if x != nil && x.Truncated != nil {
		return *x.Truncated
	}
	return false
}

func (x *ListItems) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type ContentRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos    *int32 `protobuf:"varint,1,opt,name=pos" json:"pos,omitempty"`
	Length *int32 `protobuf:"varint,2,opt,name=length" json:"length,omitempty"`
}

func (x *ContentRange) Reset() {
	*x = ContentRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playlist4content_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContentRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentRange) ProtoMessage() {}

func (x *ContentRange) ProtoReflect() protoreflect.Message {
	mi := &file_playlist4content_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentRange.ProtoReflect.Descriptor instead.
func (*ContentRange) Descriptor() ([]byte, []int) {
	return file_playlist4content_proto_rawDescGZIP(), []int{2}
}

func (x *ContentRange) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *ContentRange) GetLength() int32 {
	if x != nil && x.Length != nil {
		return *x.Length
	}
	return 0
}

type ListContentSelection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WantRevision          *bool                  `protobuf:"varint,1,opt,name=wantRevision" json:"wantRevision,omitempty"`
	WantLength            *bool                  `protobuf:"varint,2,opt,name=wantLength" json:"wantLength,omitempty"`
	WantAttributes        *bool                  `protobuf:"varint,3,opt,name=wantAttributes" json:"wantAttributes,omitempty"`
	WantChecksum          *bool                  `protobuf:"varint,4,opt,name=wantChecksum" json:"wantChecksum,omitempty"`
	WantContent           *bool                  `protobuf:"varint,5,opt,name=wantContent" json:"wantContent,omitempty"`
	ContentRange          *ContentRange          `protobuf:"bytes,6,opt,name=contentRange" json:"contentRange,omitempty"`
	WantDiff              *bool                  `protobuf:"varint,7,opt,name=wantDiff" json:"wantDiff,omitempty"`
	BaseRevision          []byte                 `protobuf:"bytes,8,opt,name=baseRevision" json:"baseRevision,omitempty"`
	HintRevision          []byte                 `protobuf:"bytes,9,opt,name=hintRevision" json:"hintRevision,omitempty"`
	WantNothingIfUpToDate *bool                  `protobuf:"varint,10,opt,name=wantNothingIfUpToDate" json:"wantNothingIfUpToDate,omitempty"`
	WantResolveAction     *bool                  `protobuf:"varint,12,opt,name=wantResolveAction" json:"wantResolveAction,omitempty"`
	Issues                []*ClientIssue         `protobuf:"bytes,13,rep,name=issues" json:"issues,omitempty"`
	ResolveAction         []*ClientResolveAction `protobuf:"bytes,14,rep,name=resolveAction" json:"resolveAction,omitempty"`
}

func (x *ListContentSelection) Reset() {
	*x = ListContentSelection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playlist4content_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContentSelection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContentSelection) ProtoMessage() {}

func (x *ListContentSelection) ProtoReflect() protoreflect.Message {
	mi := &file_playlist4content_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContentSelection.ProtoReflect.Descriptor instead.
func (*ListContentSelection) Descriptor() ([]byte, []int) {
	return file_playlist4content_proto_rawDescGZIP(), []int{3}
}

func (x *ListContentSelection) GetWantRevision() bool {
	if x != nil && x.WantRevision != nil {
		return *x.WantRevision
	}
	return false
}

func (x *ListContentSelection) GetWantLength() bool {
	if x != nil && x.WantLength != nil {
		return *x.WantLength
	}
	return false
}

func (x *ListContentSelection) GetWantAttributes() bool {
	if x != nil && x.WantAttributes != nil {
		return *x.WantAttributes
	}
	return false
}

func (x *ListContentSelection) GetWantChecksum() bool {
	if x != nil && x.WantChecksum != nil {
		return *x.WantChecksum
	}
	return false
}

func (x *ListContentSelection) GetWantContent() bool {
	if x != nil && x.WantContent != nil {
		return *x.WantContent
	}
	return false
}

func (x *ListContentSelection) GetContentRange() *ContentRange {
	if x != nil {
		return x.ContentRange
	}
	return nil
}

func (x *ListContentSelection) GetWantDiff() bool {
	if x != nil && x.WantDiff != nil {
		return *x.WantDiff
	}
	return false
}

func (x *ListContentSelection) GetBaseRevision() []byte {
	if x != nil {
		return x.BaseRevision
	}
	return nil
}

func (x *ListContentSelection) GetHintRevision() []byte {
	if x != nil {
		return x.HintRevision
	}
	return nil
}

func (x *ListContentSelection) GetWantNothingIfUpToDate() bool {
	if x != nil && x.WantNothingIfUpToDate != nil {
		return *x.WantNothingIfUpToDate
	}
	return false
}

func (x *ListContentSelection) GetWantResolveAction() bool {
	if x != nil && x.WantResolveAction != nil {
		return *x.WantResolveAction
	}
	return false
}

func (x *ListContentSelection) GetIssues() []*ClientIssue {
	if x != nil {
		return x.Issues
	}
	return nil
}

func (x *ListContentSelection) GetResolveAction() []*ClientResolveAction {
	if x != nil {
		return x.ResolveAction
	}
	return nil
}

var File_playlist4content_proto protoreflect.FileDescriptor

var file_playlist4content_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x34, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x13, 0x70, 0x6c,
	0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x34, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x15, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x34, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4c, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x69, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x5b, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x38, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0xae, 0x04,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x77, 0x61,
	0x6e, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x61,
	0x6e, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x77, 0x61, 0x6e, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0e, 0x77, 0x61,
	0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x77, 0x61, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x61, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73,
	0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x77, 0x61, 0x6e, 0x74, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x61, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x77, 0x61, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x77, 0x61, 0x6e, 0x74, 0x44, 0x69, 0x66, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x77, 0x61, 0x6e, 0x74, 0x44, 0x69, 0x66, 0x66, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22,
	0x0a, 0x0c, 0x68, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x68, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x15, 0x77, 0x61, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e,
	0x67, 0x49, 0x66, 0x55, 0x70, 0x54, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x15, 0x77, 0x61, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x49, 0x66,
	0x55, 0x70, 0x54, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x77, 0x61, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x11, 0x77, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73,
	0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x12,
	0x3d, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0d, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0a,
	0x5a, 0x08, 0x2e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62,
}

var (
	file_playlist4content_proto_rawDescOnce sync.Once
	file_playlist4content_proto_rawDescData = file_playlist4content_proto_rawDesc
)

func file_playlist4content_proto_rawDescGZIP() []byte {
	file_playlist4content_proto_rawDescOnce.Do(func() {
		file_playlist4content_proto_rawDescData = protoimpl.X.CompressGZIP(file_playlist4content_proto_rawDescData)
	})
	return file_playlist4content_proto_rawDescData
}

var file_playlist4content_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_playlist4content_proto_goTypes = []interface{}{
	(*Item)(nil),                 // 0: pb.Item
	(*ListItems)(nil),            // 1: pb.ListItems
	(*ContentRange)(nil),         // 2: pb.ContentRange
	(*ListContentSelection)(nil), // 3: pb.ListContentSelection
	(*ItemAttributes)(nil),       // 4: pb.ItemAttributes
	(*ClientIssue)(nil),          // 5: pb.ClientIssue
	(*ClientResolveAction)(nil),  // 6: pb.ClientResolveAction
}
var file_playlist4content_proto_depIdxs = []int32{
	4, // 0: pb.Item.attributes:type_name -> pb.ItemAttributes
	0, // 1: pb.ListItems.items:type_name -> pb.Item
	2, // 2: pb.ListContentSelection.contentRange:type_name -> pb.ContentRange
	5, // 3: pb.ListContentSelection.issues:type_name -> pb.ClientIssue
	6, // 4: pb.ListContentSelection.resolveAction:type_name -> pb.ClientResolveAction
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_playlist4content_proto_init() }
func file_playlist4content_proto_init() {
	if File_playlist4content_proto != nil {
		return
	}
	file_playlist4meta_proto_init()
	file_playlist4issues_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_playlist4content_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playlist4content_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playlist4content_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContentRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playlist4content_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContentSelection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_playlist4content_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_playlist4content_proto_goTypes,
		DependencyIndexes: file_playlist4content_proto_depIdxs,
		MessageInfos:      file_playlist4content_proto_msgTypes,
	}.Build()
	File_playlist4content_proto = out.File
	file_playlist4content_proto_rawDesc = nil
	file_playlist4content_proto_goTypes = nil
	file_playlist4content_proto_depIdxs = nil
}
